name: Nightly

on:
  schedule:
    - cron: '0 1 * * *'

jobs:
  ubuntu-gcc-build-nightly:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        qt_version: ['5.12.8', '5.15.0']
    steps:
    - uses: actions/checkout@v1
    - name: Install gcc
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install g++-9
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  ubuntu-clang-build-nightly:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        qt_version: ['5.12.8', '5.15.0']
    steps:
    - uses: actions/checkout@v1
    - name: Install clang
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install clang-10
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j
      env:
        CC: clang-10
        CXX: clang++-10
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  macOS-gcc-build-nightly:
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        qt_version: ['5.12.8', '5.15.0']
    steps:
    - uses: actions/checkout@v1
    - name: Install gcc
      run: |
        brew install gcc@9
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j
      env:
        CC: gcc-9
        CXX: g++-9
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  macOS-clang-build-nightly:
    strategy:
      fail-fast: false
      matrix:
        qt_version: ['5.12.8', '5.15.0']
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  windows-msvc-build-nightly:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - qt_version: '5.12.8'
          arch: win64_msvc2017_64
        - qt_version: '5.15.0'
          arch: win64_msvc2019_64
    steps:
    - uses: actions/checkout@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        arch: ${{ matrix.arch }}
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Run tests
      run: |
        cd build
        bin\\fishing-time_test
  windows-mingw-build-nightly:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - qt_version: '5.12.8'
          arch: win64_mingw73
        - qt_version: '5.15.0'
          arch: win64_mingw81
    steps:
    - uses: actions/checkout@v1
    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
    - name: Install gcc
      shell: msys2 {0}
      run: pacman -S --noconfirm mingw-w64-x86_64-gcc
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        arch: ${{ matrix.arch }}
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake .. -G"MSYS Makefiles"
        cmake --build . -- -j
      env:
        CC: gcc
        CXX: g++
    - name: Run tests
      run: |
        cd build
        bin\\fishing-time_test
