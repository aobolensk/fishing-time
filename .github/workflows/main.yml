name: Build application

on: [push, pull_request]

jobs:
  ubuntu-gcc-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup environment
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install g++-9 qt5-default
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  ubuntu-clang-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup environment
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
        sudo apt update
        sudo apt install clang-10 qt5-default
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j
      env:
        CC: clang-10
        CXX: clang++-10
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  windows-msvc-build:
    runs-on: windows-latest
    strategy:
      matrix:
        qt_version: ['5.14.2']
    steps:
    - uses: actions/checkout@v1
    - name: Cache Qt
      id: cache_qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.qt_version }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache_qt.outputs.cache-hit }}
        version: ${{ matrix.qt_version }}
        arch: win64_msvc2017_64
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
    - name: Run tests
      run: |
        cd build
        bin\\fishing-time_test
  windows-mingw-build:
    runs-on: windows-latest
    strategy:
      matrix:
        qt_version: ['5.14.2']
    steps:
    - uses: actions/checkout@v1
    - name: Install MSYS2
      uses: numworks/setup-msys2@v1
    - name: Install gcc
      run: msys2do pacman -S --noconfirm mingw-w64-x86_64-gcc
    - name: Cache Qt
      id: cache_qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.qt_version }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache_qt.outputs.cache-hit }}
        version: ${{ matrix.qt_version }}
        arch: win64_mingw73
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake .. -G"MSYS Makefiles"
        cmake --build . -- -j
      env:
        CC: gcc
        CXX: g++
    - name: Run tests
      run: |
        cd build
        bin\\fishing-time_test
  macOS-gcc-build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup environment
      run: |
        brew install qt gcc@9
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$(brew --prefix qt)/lib/cmake/Qt5
        cmake --build . -- -j
      env:
        CC: gcc-9
        CXX: g++-9
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
  macOS-clang-build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup environment
      run: |
        brew install qt
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$(brew --prefix qt)/lib/cmake/Qt5
        cmake --build . -- -j
    - name: Run tests
      run: |
        cd build
        ./bin/fishing-time_test
